
// DllMain.cpp
//============================================================================//
// 概要：なし。
// 補足：なし。
//============================================================================//

#include "RarFile.h"
#include <tchar.h>


/******************************************************************************/
//		定義
/******************************************************************************/

#define  TYPE_READHEADER	0x001
#define  TYPE_WRITEHEADER	0x002

#define  VERSION1_0		0x010


/******************************************************************************/
//		エクスポート関数郡
/******************************************************************************/
// DLL のバージョンを返す
//============================================================================//
// 概要：なし。
// 補足：なし。
//============================================================================//

UINT WINAPI GetDllVersion()
{
	return VERSION1_0;
}


/******************************************************************************/
// DLL のタイプを表す
//============================================================================//
// 概要：なし。
// 補足：なし。
//============================================================================//

UINT WINAPI GetDllType()
{
	return TYPE_READHEADER;
}


/******************************************************************************/
// ファイルパス設定
//============================================================================//
// 概要：なし。
// 補足：この DLL では対応できないファイルのときは FALSE を返す。
//============================================================================//

BOOL WINAPI ReadHeader(LPCTSTR pszBuf)
{
	RarFile* pRar = RarFile::GetInstance(pszBuf);
	return pRar->_ReadHeader();
}


/******************************************************************************/
// ファイルの数を教える
//============================================================================//
// 概要：なし。
// 補足：なし。
//============================================================================//

UINT WINAPI GetFileCount()
{
	RarFile* pRarFile = RarFile::GetInstance();
	if(!pRarFile)
	{
		return 0;
	}

	return pRarFile->GetChildCount();
}


/******************************************************************************/
// ファイル名を教える
//============================================================================//
// 概要：なし。
// 補足：なし。
//============================================================================//

LPCTSTR WINAPI GetFileName(UINT uiIndex)
{
	RarFile* pRarFile = RarFile::GetInstance();
	if(!pRarFile)
	{
		return "";
	}

	return pRarFile->GetChildName(uiIndex).c_str();
}


/******************************************************************************/
// ファイルの始点を教える
//============================================================================//
// 概要：なし。
// 補足：なし。
//============================================================================//

UINT WINAPI GetFileStartPoint(UINT uiIndex)
{
	RarFile* pRarFile = RarFile::GetInstance();
	if(!pRarFile)
	{
		return 0;
	}

	return pRarFile->GetChildStartPoint(uiIndex);
}


/******************************************************************************/
// ファイルの終点を教える
//============================================================================//
// 概要：なし。
// 補足：なし。
//============================================================================//

UINT WINAPI GetFileEndPoint(UINT uiIndex)
{
	RarFile* pRarFile = RarFile::GetInstance();
	if(!pRarFile)
	{
		return 0;
	}

	return pRarFile->GetChildEndPoint(uiIndex);
}


/******************************************************************************/
// 圧縮されているか
//============================================================================//
// 概要：なし。
// 補足：なし。
//============================================================================//

BOOL WINAPI IsCompressed(UINT uiIndex)
{
	RarFile* pRarFile = RarFile::GetInstance();
	if(!pRarFile)
	{
		return 0;
	}

	return pRarFile->_IsCompressed(uiIndex);
}


